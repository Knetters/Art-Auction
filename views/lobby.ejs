<%- include('./partials/head') %>

<%- include('./partials/iconBar') %>

<%- include('./partials/collection') %>

<h1>Waiting for players...</h1>

  <section class="medium-menu">
    <span id="player-count" class="player-count"><%= players.length %>/8</span>
    <span id="game-code" class="game-code"><%= gameCode %></span>
    <h2>Players</h2>
    <ul class="player-invite-list">
      <% players.forEach(player => { %>
        <li class="<% if(player.role === "host") { %>host<% } %>"><%= player.name %><span id="remove-player-icon" class="player-list-icon float-right <% if(player.role === "host") { %>hide<% } %>"><i class="fa fa-times" aria-hidden="true"></i></span></li>
      <% }); %>
    </ul>
    <span id="inviteMorePlayersMessage" class="invite-more-players-message"></span>
    
    <% if (playerRole === 'host') { %>
      <% if (players.length < 1) { %>
        <button id="host-start-button" class="not-enough-players">Start</button>
      <% } else { %>
        <button id="host-start-button" onclick="navigateToGame()">Start</button>
      <% } %>
    <% } %>
  </section>
  <div class="leave-button-container">
    <button id="leave-button">Leave</button>
  </div>

<%- include('./partials/foot') %>

<script>
  // Function to navigate to the anchor point called "game"
  function navigateToGame() {
    const gameCode = document.getElementById('game-code').innerText;
    window.location.href = `/game/${gameCode}`;
  }

  const socket = io(); // Establish socket.io connection

  // Function to render the host button based on the player's role
  function renderHostButton(role) {
    const hostButton = document.getElementById('host-start-button');
    if (hostButton) {
      if (role === 'host') {
        hostButton.style.display = 'block';
      } else {
        hostButton.style.display = 'none';
      }
    }
  }

  socket.on('userJoined', (data) => {
    const playerName = data.playerName;
    alert(`User ${playerName} joined the lobby.`);
  });

  function fetchPlayerList() {
  const gameCode = document.getElementById('game-code').innerText;
  const inviteMorePlayersMessage = document.getElementById("inviteMorePlayersMessage");
  const playerCount = document.getElementById("player-count");

  fetch(`/getPlayerList/${gameCode}`)
    .then(response => response.json())
    .then(data => {
      // Update the player list in the DOM
      const playerList = document.querySelector('.player-invite-list');
      playerList.innerHTML = ''; // Clear the existing list

      if (data.players.length === 0) {
        const noPlayersItem = document.createElement('li');
        noPlayersItem.textContent = 'No players yet...';
        playerList.appendChild(noPlayersItem);
      } else {
        data.players.forEach(player => {
          const playerItem = document.createElement('li');
          playerItem.textContent = player.name;
          playerList.appendChild(playerItem);
          playerCount.innerHTML = `${data.players.length}/8`;
        });
      }

      if (data.players.length >= 3) {
        inviteMorePlayersMessage.innerHTML = ""
      } else {
        inviteMorePlayersMessage.innerHTML = "Invite more players to start"
      }
    })
    .catch(error => {
      console.error('Error fetching player list:', error);
  });
}

// Call the fetchPlayerList function every few seconds
fetchPlayerList()
setInterval(fetchPlayerList, 3000); // Adjust the interval as needed
</script>