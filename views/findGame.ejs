<%- include('./partials/head') %>

<%- include('./partials/iconBar') %>

<%- include('./partials/collection') %>

<h1>Find game</h1>

<section class="medium-menu">
    <form id="lobby-entry-form">
      <h2>Username</h2>
      <input class="input-field" type="text" id="player-name" autocomplete="off" spellcheck="false" maxlength="16" required>
      <h2>Game code</h2>
      <input class="input-field" type="text" id="lobby-code" autocomplete="off" spellcheck="false" maxlength="6" required>

      <button type="submit">Find Lobby</button>
    </form>
</section>

<%- include('./partials/foot') %>

<script>
  function generateId() {
    // Generate a random ID using a combination of timestamp and a random number
    const timestamp = new Date().getTime();
    const randomNum = Math.floor(Math.random() * 1000);
    const id = `${timestamp}-${randomNum}`;
    return id;
  }

  const form = document.getElementById('lobby-entry-form');
  const playerNameInput = document.getElementById('player-name');
  const lobbyCodeInput = document.getElementById('lobby-code');

  const socket = io(); // Establish socket.io connection

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    const playerRole = "player"; // or "player" depending on the page
    const playerName = playerNameInput.value;
    const lobbyCode = lobbyCodeInput.value;

    const playerId = generateId();

    // Emit the joinLobby event to the server
    socket.emit('joinLobby', { playerId, playerRole, playerName, lobbyCode });

    // Set the player role in the session
    fetch(`/setRole/${playerRole}`)
      .then(() => {
        console.log('Player role set in session');
      })
      .catch((error) => {
        console.error('Failed to set player role in session:', error);
      });
  });

  // Event listener for lobby not found error
  socket.on('lobbyNotFoundError', () => {
    // Handle the error, e.g., show an error message to the user
    console.log('Lobby not found');
  });

  // Event listener for player list update
  socket.on('playerListUpdate', (players) => {
    // Handle the updated player list, e.g., update the UI with the new players
    console.log('Player list:', players);
  });

  // Event listener for lobby redirect
  socket.on('lobbyRedirect', (data) => {
    const { lobbyCode } = data;
    // Redirect the player to the lobby page
    window.location.href = `/lobby/${lobbyCode}`;
  });
</script>